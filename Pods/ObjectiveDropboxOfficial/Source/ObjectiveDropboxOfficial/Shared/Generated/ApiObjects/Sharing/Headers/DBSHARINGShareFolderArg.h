///
/// Copyright (c) 2016 Dropbox, Inc. All rights reserved.
///
/// Auto-generated by Stone, do not modify.
///

#import <Foundation/Foundation.h>

#import "DBSerializableProtocol.h"

@class DBSHARINGAclUpdatePolicy;
@class DBSHARINGFolderAction;
@class DBSHARINGLinkSettings;
@class DBSHARINGMemberPolicy;
@class DBSHARINGShareFolderArg;
@class DBSHARINGSharedLinkPolicy;
@class DBSHARINGViewerInfoPolicy;

#pragma mark - API Object

///
/// The `ShareFolderArg` struct.
///
/// This class implements the `DBSerializable` protocol (serialize and
/// deserialize instance methods), which is required for all Obj-C SDK API route
/// objects.
///
@interface DBSHARINGShareFolderArg : NSObject <DBSerializable>

#pragma mark - Instance fields

/// The path to the folder to share. If it does not exist, then a new one is
/// created.
@property (nonatomic, readonly, copy) NSString * _Nonnull path;

/// Who can be a member of this shared folder. Only applicable if the current
/// user is on a team.
@property (nonatomic, readonly) DBSHARINGMemberPolicy * _Nullable memberPolicy;

/// Who can add and remove members of this shared folder.
@property (nonatomic, readonly) DBSHARINGAclUpdatePolicy * _Nullable aclUpdatePolicy;

/// The policy to apply to shared links created for content inside this shared
/// folder.  The current user must be on a team to set this policy to `members`
/// in `DBSHARINGSharedLinkPolicy`.
@property (nonatomic, readonly) DBSHARINGSharedLinkPolicy * _Nullable sharedLinkPolicy;

/// Whether to force the share to happen asynchronously.
@property (nonatomic, readonly) NSNumber * _Nonnull forceAsync;

/// This is a list indicating whether each returned folder data entry will
/// include a boolean field `allow` in `DBSHARINGFolderPermission` that
/// describes whether the current user can perform the `FolderAction` on the
/// folder.
@property (nonatomic, readonly) NSArray<DBSHARINGFolderAction *> * _Nullable actions;

/// Settings on the link for this folder.
@property (nonatomic, readonly) DBSHARINGLinkSettings * _Nullable linkSettings;

/// Who can enable/disable viewer info for this shared folder.
@property (nonatomic, readonly) DBSHARINGViewerInfoPolicy * _Nullable viewerInfoPolicy;

#pragma mark - Constructors

///
/// Full constructor for the struct (exposes all instance variables).
///
/// @param path The path to the folder to share. If it does not exist, then a
/// new one is created.
/// @param memberPolicy Who can be a member of this shared folder. Only
/// applicable if the current user is on a team.
/// @param aclUpdatePolicy Who can add and remove members of this shared folder.
/// @param sharedLinkPolicy The policy to apply to shared links created for
/// content inside this shared folder.  The current user must be on a team to
/// set this policy to `members` in `DBSHARINGSharedLinkPolicy`.
/// @param forceAsync Whether to force the share to happen asynchronously.
/// @param actions This is a list indicating whether each returned folder data
/// entry will include a boolean field `allow` in `DBSHARINGFolderPermission`
/// that describes whether the current user can perform the `FolderAction` on
/// the folder.
/// @param linkSettings Settings on the link for this folder.
/// @param viewerInfoPolicy Who can enable/disable viewer info for this shared
/// folder.
///
/// @return An initialized instance.
///
- (nonnull instancetype)initWithPath:(NSString * _Nonnull)path
                        memberPolicy:(DBSHARINGMemberPolicy * _Nullable)memberPolicy
                     aclUpdatePolicy:(DBSHARINGAclUpdatePolicy * _Nullable)aclUpdatePolicy
                    sharedLinkPolicy:(DBSHARINGSharedLinkPolicy * _Nullable)sharedLinkPolicy
                          forceAsync:(NSNumber * _Nullable)forceAsync
                             actions:(NSArray<DBSHARINGFolderAction *> * _Nullable)actions
                        linkSettings:(DBSHARINGLinkSettings * _Nullable)linkSettings
                    viewerInfoPolicy:(DBSHARINGViewerInfoPolicy * _Nullable)viewerInfoPolicy;

///
/// Convenience constructor (exposes only non-nullable instance variables with
/// no default value).
///
/// @param path The path to the folder to share. If it does not exist, then a
/// new one is created.
///
/// @return An initialized instance.
///
- (nonnull instancetype)initWithPath:(NSString * _Nonnull)path;

@end

#pragma mark - Serializer Object

///
/// The serialization class for the `ShareFolderArg` struct.
///
@interface DBSHARINGShareFolderArgSerializer : NSObject

///
/// Serializes `DBSHARINGShareFolderArg` instances.
///
/// @param instance An instance of the `DBSHARINGShareFolderArg` API object.
///
/// @return A json-compatible dictionary representation of the
/// `DBSHARINGShareFolderArg` API object.
///
+ (NSDictionary * _Nonnull)serialize:(DBSHARINGShareFolderArg * _Nonnull)instance;

///
/// Deserializes `DBSHARINGShareFolderArg` instances.
///
/// @param dict A json-compatible dictionary representation of the
/// `DBSHARINGShareFolderArg` API object.
///
/// @return An instantiation of the `DBSHARINGShareFolderArg` object.
///
+ (DBSHARINGShareFolderArg * _Nonnull)deserialize:(NSDictionary * _Nonnull)dict;

@end
